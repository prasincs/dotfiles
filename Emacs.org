# -*- mode: org; eval: (visual-line-mode 1) -*-
#+TODO: TODO REMINDER NOTE ERROR DONE
#+STARTUP: indent

* Common things

** REMINDER Wrapping longlines
visual-line-mode
** REMINDER Searching on Web
You can use M-x webjump
It will ask for the site, say DuckDuckGo and search
** REMINDER Transposing Lines/Swapping Lines
http://www.gnu.org/software/emacs/manual/html_node/emacs/Transpose.html
C-x C-t
** REMINDER Copying s-expression
C-M-k will copy just the s-expression right next to the cursor

** REMINDER Reloading Buffer
S-u will reload buffer

** REMINDER Getting help
`C-h b` shows the keybindings applicable in current buffer
** Browsing the kill-ring
Emacs has a "kill-ring" that's similar to vim's registers functinality accessible via `:reg` command.
- Press `s -y` to get to it.
- Navigate to the item in the list and press `i` to insert it.
- Press `h` to get help
** Version Control annotation
Use `M-x vc-annotate`
** Searching within Project in Prelude
Make sure ag.el is installed. Then run `C-c p s s` or `S-p s s`
** Swapping Buffers (Left/Right)
If you want to swap left and right buffers..
C-c s
does that. You need exactly 2 windows to do this.
** Taking Notes
M-x remember
C-c C-c when done
Saves to emacs.d/notes by default.
http://sachachua.com/blog/2010/09/new-note-taking-workflow-with-emacs-org-mode/
** Finding what a shortcut does
C-h k will open an interactive dialog in mini buffer and ask for the shortcut that it's mapped to.
** Copy Pasting
http://www.emacswiki.org/emacs/CopyAndPaste

| Common Name | Common Key | Emacs Name     | Emacs Key |
|-------------+------------+----------------+-----------|
| Cut         | C-x, Cmd-x | kill           | C-w       |
| Copy        | C-c, Cmd-c | kill-ring-save | M-w       |
| Paste       | C-v, Cmd-v | yank           | C-y       |
| --          | --         | yank-pop       | M-y       |


*** Using the kill-ring
Browsing kill-ring =M-x browse-kill-ring= or =S-y=
** Getting Help
- You can use ‘C-h m’ for help on the current major mode, and ‘C-h b’ to see all the bindings in effect.
- The symbol identifying the current major mode is stored in the variable major-mode.
- Middle Clicking the minor mode will show you the shortcuts for that mode
** Annotating source code in version control (git mostly)
- Use =vc-annotate= or =C-x v g=
** New Files and create intermediate directories
Create the file with the usual path including the intermediate dirs
Once the file is open, do =M-x make-directory= and press RET RET
* Tricks
** Opening Files in remote machines

The find-file command also supports visiting files in remote machines using a
=/ssh:= prefix. Enter =C-x C-f=, then in the interactive window, enter the
following:

#+BEGIN_SRC emacs
/ssh:<hostname>:filename
#+END_SRC

** Searching
This might be Prelude specific.. But C-c g opens Google for searching
* Command Summary

Taken from https://www.cs.rutgers.edu/LCSR-Computing/some-docs/emacs-chart.html

C-SP     set-mark-command		 C-q      quoted-insert
C-a      beginning-of-line		 C-r      isearch-backward
C-b      backward-char			 C-s      isearch-forward
C-c      exit-recursive-edit		 C-t      transpose-chars
C-d      delete-char			 C-u      universal-argument
C-e      end-of-line			 C-v      scroll-up
C-f      forward-char			 C-w      kill-region
C-h      help-command			 C-x      Control-X-prefix
TAB      indent-for-tab-command		 C-y      yank
LFD      newline-and-indent		 C-z      suspend-emacs
C-k      kill-line			 ESC      ESC-prefix
C-l      recenter			 C-]      abort-recursive-edit
RET      newline			 C-_      undo
C-n      next-line			 SPC .. ~        self-insert-command
C-o      open-line			 DEL      delete-backward-char
C-p      previous-line

C-h v    describe-variable		 C-h d    describe-function
C-h w    where-is			 C-h k    describe-key
C-h t    help-with-tutorial		 C-h c    describe-key-briefly
C-h s    describe-syntax		 C-h b    describe-bindings
C-h n    view-emacs-news		 C-h a    command-apropos
C-h C-n  view-emacs-news		 C-h C-d  describe-distribution
C-h m    describe-mode			 C-h C-c  describe-copying
C-h l    view-lossage			 C-h ?    help-for-help
C-h i    info				 C-h C-h  help-for-help
C-h f    describe-function

C-x C-a  add-mode-abbrev		 C-x 5    split-window-horizontally
C-x C-b  list-buffers			 C-x ;    set-comment-column
C-x C-c  save-buffers-kill-emacs	 C-x <    scroll-left
C-x C-d  list-directory			 C-x =    what-cursor-position
C-x C-e  eval-last-sexp			 C-x >    scroll-right
C-x C-f  find-file			 C-x [    backward-page
C-x C-h  inverse-add-mode-abbrev	 C-x ]    forward-page
C-x TAB  indent-rigidly			 C-x ^    enlarge-window
C-x C-l  downcase-region		 C-x `    next-error
C-x C-n  set-goal-column		 C-x a    append-to-buffer
C-x C-o  delete-blank-lines		 C-x b    switch-to-buffer
C-x C-p  mark-page			 C-x d    dired
C-x C-q  toggle-read-only		 C-x e    call-last-kbd-macro
C-x C-r  find-file-read-only		 C-x f    set-fill-column
C-x C-s  save-buffer			 C-x g    insert-register
C-x C-t  transpose-lines		 C-x h    mark-whole-buffer
C-x C-u  upcase-region			 C-x i    insert-file
C-x C-v  find-alternate-file		 C-x j    register-to-dot
C-x C-w  write-file			 C-x k    kill-buffer
C-x C-x  exchange-dot-and-mark		 C-x l    count-lines-page
C-x C-z  suspend-emacs			 C-x m    mail
C-x ESC  repeat-complex-command		 C-x n    narrow-to-region
C-x $    set-selective-display		 C-x o    other-window
C-x (    start-kbd-macro		 C-x p    narrow-to-page
C-x )    end-kbd-macro			 C-x q    kbd-macro-query
C-x +    add-global-abbrev		 C-x r    copy-rectangle-to-register
C-x -    inverse-add-global-abbrev	 C-x s    save-some-buffers
C-x .    set-fill-prefix		 C-x u    advertised-undo
C-x /    dot-to-register		 C-x w    widen
C-x 0    delete-window			 C-x x    copy-to-register
C-x 1    delete-other-windows		 C-x {    shrink-window-horizontally
C-x 2    split-window-vertically	 C-x }    enlarge-window-horizontally
C-x 4    ctl-x-4-prefix			 C-x DEL  backward-kill-sentence

ESC C-SP mark-sexp			 ESC =    count-lines-region
ESC C-a  beginning-of-defun		 ESC >    end-of-buffer
ESC C-b  backward-sexp			 ESC @    mark-word
ESC C-c  exit-recursive-edit		 ESC O    ??
ESC C-d  down-list			 ESC [    backward-paragraph
ESC C-e  end-of-defun			 ESC \    delete-horizontal-space
ESC C-f  forward-sexp			 ESC ]    forward-paragraph
ESC C-h  mark-defun			 ESC ^    delete-indentation
ESC LFD  indent-new-comment-line	 ESC a    backward-sentence
ESC C-k  kill-sexp			 ESC b    backward-word
ESC C-n  forward-list			 ESC c    capitalize-word
ESC C-o  split-line			 ESC d    kill-word
ESC C-p  backward-list			 ESC e    forward-sentence
ESC C-s  isearch-forward-regexp		 ESC f    forward-word
ESC C-t  transpose-sexps		 ESC g    fill-region
ESC C-u  backward-up-list		 ESC h    mark-paragraph
ESC C-v  scroll-other-window		 ESC i    tab-to-tab-stop
ESC C-w  append-next-kill		 ESC j    indent-new-comment-line
ESC ESC  ??				 ESC k    kill-sentence
ESC C-\  indent-region			 ESC l    downcase-word
ESC SPC  just-one-space			 ESC m    back-to-indentation
ESC !    shell-command			 ESC q    fill-paragraph
ESC $    spell-word			 ESC r    move-to-window-line
ESC %    query-replace			 ESC t    transpose-words
ESC '    abbrev-prefix-mark		 ESC u    upcase-word
ESC (    insert-parentheses		 ESC v    scroll-down
ESC )    move-past-close-and-reindent	 ESC w    copy-region-as-kill
ESC ,    tags-loop-continue		 ESC x    execute-extended-command
ESC -    negative-argument		 ESC y    yank-pop
ESC .    find-tag			 ESC z    zap-to-char
ESC 0 .. ESC 9  digit-argument		 ESC |    shell-command-on-region
ESC ;    indent-for-comment		 ESC ~    not-modified
ESC <    beginning-of-buffer		 ESC DEL  backward-kill-word

C-x 4 C-f       find-file-other-window	 C-x 4 d  dired-other-window
C-x 4 .  find-tag-other-window		 C-x 4 f  find-file-other-window
C-x 4 b  pop-to-buffer			 C-x 4 m  mail-other-window

* Org-mode

** Adding a Date
C-c . Adds the current date like this: <2015-06-24 Wed>
C-u C-c . Adds the current time too: <2015-06-28 Sun 22:41>
http://orgmode.org/manual/Creating-timestamps.html#Creating-timestamps

You can use Shift-Up and Shift-Down, etc keys to change the days by default
but because this conflicts with existing keys for moving around buffers,
it's overridden..

** Display Inline Images
Images are added with [[/path/to/image.ext]] and they can be displayed by using
#+BEGIN_SRC emacs
org-toggle-inline-images
#+END_SRC
or
#+BEGIN_SRC emacs
C-c C-x C-v
#+END_SRC
** Custom Markers for Org-mode
Add the following as the first line in the file
#+TODO: TODO IN-PROGRESS WAITING DONE
Press C-c C-c on that line to refresh the setup (not needed for subsequent loads of the file)
** Adding a TODO

C-c C-t to add and cycle through the custom ones
** Deleting a subtree
C-c C-x C-w
** Ditaa drawings in Org-mode
You can draw and export nice drawings in org-mode
http://orgmode.org/worg/org-contrib/babel/languages/ob-doc-ditaa.html

** Cleaner Org-mode
Add

#+STARTUP: indent
http://orgmode.org/manual/Clean-view.html#Clean-view
** REMINDER reloading Org-mode
press C-c C-c on a line starting with #
** Table Editing
Manual: http://orgmode.org/manual/Built_002din-table-editor.html
*** Adding a table
http://orgmode.org/worg/org-tutorials/tables.html
C-c | and you will be asked for the dimensions of the table.
*** Delete a row
M-S-<up>     (org-table-kill-row)
Kill the current row or horizontal line.
* TODO Integrate ditaa for diagrams
http://ditaa.sourceforge.net/

* TODO Learn Agenda mode for org-mode
* Artist Mode
http://www.emacswiki.org/emacs/ArtistMode
http://www.cinsk.org/emacs/emacs-artist.html
** TODO Using artist-mode in org-mode
It can be useful to add a diagram or such in writing notes.
* Dired Mode
** Opening Dired Mode
C-x d
** Deleting files
Flag the files to delete using d successively and x at the en
* Evil Mode
** Toggling
=C-z= toggles evil-mode on and off when you run into conflicts
* Clojure Mode

** Opening Javadoc
C-c C-d j
** Hiding *cider-error* window
`C-c e` or `M-x hide-cider-error-window`

* Clojure-Refactor Mode

** It works by using shortcuts C-c C-m and two letter suffixes

https://github.com/clojure-emacs/clj-refactor.el/wiki

*** Sorting/De-duping namespaces
C-c C-m s n
* Magit mode
** Cheatsheet
https://github.com/magit/magit/wiki/Cheatsheet

** Shortcuts
| Shortcut   | Description      |
|------------+------------------|
| S-i, C-x g | magit-status     |
| k          | discard hunk     |
| Tab        | Expand a change  |
| u          | Unstage a change |

** Diffing
- Magit ediff is actually pretty cool way to manage the diffs once you learn how to
- Press `e` in any unmerged file
- The small buffer for taking commands is generally below other buffers
- Press `p/n` to navigate between the conflicts
- Pick the options using `A` or `B`
- Press `q` at the end of if when ediff will ask whether you want to save the file or not.
** Changing Upstream

- Open magit-status window

- Press 'b u' to get it to ask which upstream to use

** Diffing a Range of Commits
- Open magit-log
- Mark start and end of commits
- Press `d` then press `r`
* Projectile Mode
** Switching Projects
`S-p p` or projectile-switch-project
`S-p f` to switch perspective mode (kills other buffers and switches entirely to new project)
** Searching within Project
You can use grep but it's really slow.. Use ag using `C-c p s s` or `S-p s s`
* Markdown Mode
** Cheatsheet
** Inserting Link
`C-c C-a l`. It will put the highlighted item in bracket and let you paste the link in parenthesis by default
* JS/JSON Mode
** Using JsonLint
- Need jsonlint installed
- (add-hook 'json-mode 'flymake-json-load)
** Finding path of json object in the current json structure
- Use json-snatcher which is built into js-mode now
- Either =M-x jsons-print-path= or =C-c C-g=
* Perspective Mode
- keeps workspaces for different projects
Prefixes C-x x
